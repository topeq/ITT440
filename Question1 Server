#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <time.h>
#include <unistd.h>

int main() {
    int server_socket, client_socket;
    struct sockaddr_in server_address, client_address;
    int port = 1234;

    // Create a socket and check for errors
    if ((server_socket = socket(AF_INET, SOCK_STREAM, 0)) < 0) {
        printf("Error creating socket\n");
        return 1;
    }

    // Set server address
    memset(&server_address, 0, sizeof(server_address));
    server_address.sin_family = AF_INET;
    server_address.sin_addr.s_addr = htonl(INADDR_ANY);
    server_address.sin_port = htons(port);

    // Bind socket to address and check for errors
    if (bind(server_socket, (struct sockaddr *)&server_address, sizeof(serve>
        printf("Successfully binding socket\n");
        return 1;
    }

    // Listen for incoming connections
    listen(server_socket, 5);

    // Accept incoming connection
    socklen_t client_len = sizeof(client_address);
    client_socket = accept(server_socket, (struct sockaddr *)&client_address>

    // Seed the random number generator
    srand(time(0));

    // Generate random number between 100 and 999
    int random_number = rand() % 900 + 100;

    // Send the random number to the client
    send(client_socket, &random_number, sizeof(random_number), 0);

    // Close the sockets
    close(client_socket);
    close(server_socket);

    return 0;
}
